<div id="datatable-filters">
<div class="form-inline">
  <select id="datatable-type" class="form-control">
    <%= options_for_select(table.types) %>
  </select>
  <select id="datatable-industry" class="form-control">
    <%= options_for_select(table.industries) %>
  </select>
  <select id="datatable-list-select" class="form-control">
    <%= options_for_select(table.list_options) %>
  </select>
  <div id="datatable-filters-line2">
    <input id="datatable-search" class="form-control" type="text" placeholder="search">
    <input id="datatable-clear" type="button" value="Clear All" class="btn btn-default">
  </div>
</div>
</div>

<div id="datatable-total-wrapper" <%= local_assigns.has_key? :toggle_visibility ? 'style="display: none;"' : '' %>>
  <table id="datatable-table" class="table table-striped table-bordered">
    <thead>
      <tr>
        <th>Entity</th>
        <th>Belongs to Lists</th>
      </tr>
    </thead>
  </table>
</div>

<script>
var data = <%= raw(table.data.to_json); %>

var ternary = function(data, type, row) {
  if (data == null) {
    return "null";
  } else if (data == true) {
    return "true";
  } else {
    return "false";
  }
}

$(document).ready(function() {
  $('#datatable-table').DataTable({
    data: data,
    dom: "<'buttons'>iprtp",
    pageLength: 20,
    columns: [
      { 
        data: 'name', 
        name: 'name',
        className: 'topics-datatable-name',
        render: function(data, type, row) {
          var a = document.createElement('a');
          a.href = row.rels_url;
          a.setAttribute('class', 'entity-link');
          a.innerHTML = row.name;
          var str = a.outerHTML;
          var blurb = document.createElement('span');
          blurb.setAttribute('class', 'topics-datatable-blurb');
          blurb.innerHTML = row.blurb;
          str += " &nbsp; " + blurb.outerHTML;
          return str;
        }
      },
      {
        data: 'list_names', 
        name: 'list_names',
        visible: true,
        searchable: true,
        sortable: false
      },
      {
        data: 'blurb',
        name: 'blurb',
        visible: false,
        searchable: true
      },
      {
        data: 'id',
        name: 'id',
        visible: false,
        searchable: false
      },
      {
        data: 'types',
        name: 'types',
        visible: false, 
        searchable: true
      },
      {
        data: 'industries',
        name: 'industries',
        visible: false,
        searchable: true
      },
      {
        data: 'list_ids',
        name: 'list_ids',
        visible: false,
        searchable: true
      },
      // NEED 'master search' THIS IN ORDER TO NOT TEXT SEARCH THE SELECT COLUMNS, WHICH MUST BE "searchable: true" IN ORDER FOR FILTERS TO WORK
      {
        data: 'master_search',
        name: 'master_search',
        visible: false,
        searchable: true,
        render: function(data, type, row) {
          var keys = ['name', 'blurb', 'types', 'industries']
          return keys.map(function(key) { return row[key] }).join('  ');
        }
      }
    ]
  });

  var tbl = $('#datatable-table').DataTable();

  var type = $('#datatable-type');
  type.on('change', function() {
    var val = $(this).val() ? "\\b" + $(this).val() + "\\b" : "";
    tbl.columns('types:name').search(val, true).draw();
  });

  var industry = $('#datatable-industry');
  industry.on('change', function() {
    var val = $(this).val() ? "\\b" + $(this).val() + "\\b" : "";
    tbl.columns('industries:name').search(val, true).draw();
  });

  var list_select = $('#datatable-list-select');
  list_select.on('change', function() {
    var val = $(this).val() ? "\\b" + $(this).val() + "\\b" : "";
    tbl.columns('list_ids:name').search(val, true).draw();
  });

  var search = $('#datatable-search');
  search.keyup(function() {
    tbl.columns('master_search:name').search($(this).val()).draw();
  });

  var array_to_csv_data = function(ary) {
    var str = "data:text/csv;charset=utf-8,";
    var lines = ary.map(function(data){
      return data.join(",");
    });
    str += lines.join("\n");    
    return encodeURI(str);
  }

  var escape_csv_value = function(value) {
    var value = value === null ? '' : value.toString();
    value = value.replace(/"/g, '""');
    if (value.search(/("|,|\n)/g) >= 0) {
      value = '"' + value + '"';      
    }
    return value;  
  }

  var a = document.createElement('a');
  a.innerHTML = 'Export CSV';
  a.setAttribute('class', 'btn btn-default');
  a.href="#";
  $('.buttons')[0].appendChild(a);
  $(a).on('click', function() {
    var fields = ['id', 'name', 'blurb', 'types', 'list_names']
    var data = [fields]
    var rows = $('#datatable-table').dataTable()._('tr', { filter: "applied" });
    data = data.concat(Array.prototype.slice.apply(rows).map(function(d) {
      return fields.map(function(field) {
        return escape_csv_value(d[field]);
      });
    }));
    window.open(array_to_csv_data(data));
  });

  var str_fields = ['type', 'industry', 'list-select', 'search'];
  
  var compute_hash = function() {
    var fields = {};
    str_fields.forEach(function(field) {
      var val = $('#datatable-' + field).val();
      if (val) {
        fields[field] = val;
      }
    });

    if (search.val()) {
      fields['search'] = search.val();
    }

    var base = window.location.href.split("#")[0];
    return Object.keys(fields).map(function(key) { return key + "=" + encodeURIComponent(fields[key]); }).join('&'); 
  };

  var a = document.createElement('a');
  a.innerHTML = 'Link';
  a.setAttribute('class', 'btn btn-default');
  a.href="javascript:void(0)";
  $('.buttons')[0].appendChild(a);
  $(a).on("click", function() {
    window.location.hash = compute_hash();
    return false;
  });

  var init_search = "";
  var hash = (window.location.href.split('#').length > 1) ? window.location.href.split('#')[1] : "";
  hash.split('&').forEach(function(pair) {
    pair = pair.split('=');
    var key = pair[0];
    var val = decodeURIComponent(pair[1]);

    var e = $('#datatable-' + key);

    if (str_fields.indexOf(key) !== -1) {
      e.val(val);
      e.trigger('change');
    } 

    if (key == 'search') {
      init_search = val;
    }
  });

  var filter_selectors = ['#datatable-type', '#datatable-industry', '#datatable-list-select', '#datatable-search'];

  $('#datatable-clear').on('click', function() {
    filter_selectors.forEach(function(selector) {
      $(selector).val('');
      $(selector).trigger('change');
      $(selector).trigger('keyup');
    });

    window.location.hash = '';
  });

  <% if local_assigns.has_key? :toggle_visibility %>

  var toggle_visibility = function() {
    var hash = compute_hash();
    if (hash) {
      $('#datatable-total-wrapper').show();
    } else {
      $('#datatable-total-wrapper').hide();
    }
  };

  filter_selectors.forEach(function(selector) {
    $(selector).on('change', function() {
      toggle_visibility();
    });

    $(selector).on('keyup', function() {
      toggle_visibility();
    });
  });

  toggle_visibility();

  <% end %>

  tbl.columns('master_search:name').search(init_search).draw();
});
</script>